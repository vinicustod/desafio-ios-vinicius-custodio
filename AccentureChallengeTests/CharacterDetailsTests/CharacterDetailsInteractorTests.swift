//
//  CharacterDetailsInteractorTests.swift
//  AccentureChallenge
//
//  Created by Vinicius Custodio on 27/07/20.
//  Copyright (c) 2020 Vinicius Custodio. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import AccentureChallenge
import XCTest

class CharacterDetailsInteractorTests: XCTestCase {
    // MARK: Subject under test
    var sut: CharacterDetailsInteractor!

    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        setupCharacterDetailsInteractor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup
    func setupCharacterDetailsInteractor() {
        sut = CharacterDetailsInteractor()

    }

    // MARK: Tests
    func testLoadCharacter() {
        // Given
        let mock = MockCharacterDetailsPresentationLogic()
        sut.presenter = mock
        sut.character = MarvelUtility.marvelCharacter

        let request = CharacterDetails.LoadInfo.Request()

        // When
        sut.loadCharacter(request)

        // Then
        XCTAssertTrue(mock.presentCharacter)
    }
}

class MockCharacterDetailsPresentationLogic: CharacterDetailsPresentationLogic {
    var presentCharacter = false
    var presentImage = false

    func presentCharacter(_ response: CharacterDetails.LoadInfo.Response) {
        presentCharacter = true
    }

    func presentCharacterImage(_ response: CharacterDetails.LoadImage.Response) {
        presentImage = true
    }


}
